


cmd中退出python   1：输入exit()，回车   2：输入quit()，回车    3：输入ctrl+z，回车

要使用 pip 安装某一固定版本的python包，只需在后边使用==操作符指定版本号即可。
例如：
pip install sklearn==0.9.0

服务器远程连接设置（https://www.cnblogs.com/weizhengLoveMayDay/p/3267756.html）

解决Python3.6.5+pymssqlsql server插入数据中文出现乱码的问题
https://blog.csdn.net/zhaogeno1/article/details/81367156

python3字典的排序
https://blog.csdn.net/ustbbsy/article/details/79637594




dir() 函数不带参数时，返回当前范围内的变量、方法和定义的类型列表；带参数时，
返回参数的属性、方法列表。
>>>dir()   #  获得当前模块的属性列表
>>> dir([ ])    # 查看列表的方法

help()




python调试：

python -m pdb hello.py    

断点设置:
(Pdb)b 10 #断点设置在本py的第10行
或(Pdb)b ots.py:20 #断点设置到 ots.py第20行
删除断点（Pdb）b #查看断点编号
(Pdb)cl 2 #删除第2个断点

运行
(Pdb)n #单步运行
(Pdb)s #细点运行 也就是会下到，方法
(Pdb)c #跳到下个断点

查看
(Pdb)p param #查看当前 变量值
(Pdb)l #查看运行到某处代码
(Pdb)a #查看全部栈内变量
(Pdb)w 列出目前call stack 中的所在层。
(Pdb)d 在call stack中往下移一层
(Pdb)u 在call stack中往上移一层。如果在上移一层之后按下 n ,则会在上移之后的一层执行下一个叙述,之前的 function call 就自动返回。
(Pdb)cl 清除指定的断点。如果没有带参数,则清除所有断点。
(Pdb)disable 取消所有断点的功能,但仍然保留这些断点。
(Pdb)enable 恢复断点的功能。
(Pdb)ignore 设定断点的忽略次数。如果没指定 count,其初始 为 0。当 count 为 0 时,断点会正常动作。若有指定 count,则每次执行到该中断, count 就少 1,直到 count 数为 0。
(Pdb)condition bpnumber [condition]
(Pdb)j(ump) lineNo. 跳到某行执行。只有在 call stack 的最底部才能作用。
(Pdb)l  列出目前所在档案中的位置。连续地 l 命令会一直列到档案结尾,可以使用指定行数或范围来打印。
(Pdb)pp 和 p 命令类似,但是使用 pprint module(没用过 pprint,详情请参考 Python Library Reference)。
(Pdb)alias 以一个"别名"代替"一群除错命令",有点类似 c/c 的 macro(详情请参考 Python Library Reference)。
(Pdb)unalias 取消某个 alias。
(Pdb)[!]statement 在目前的环境(context)中执行叙述。

